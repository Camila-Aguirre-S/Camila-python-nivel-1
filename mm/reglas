class Jugador:
    def __init__(self):
        self.mano = []
    
    def pedir_carta(self, carta):
        self.mano.append(carta)
    
    def calcular_puntaje(self):
        puntaje = 0
        for carta in self.mano:
            if carta == 'A':
                puntaje += 11
            elif carta in ['K', 'Q', 'J']:
                puntaje += 10
            else:
                puntaje += int(carta)
        return puntaje


class BlackjackGame:
    def __init__(self):
        self.jugador = Jugador()
        self.crupier = Jugador()

    def pedir_carta_jugador(self, carta):
        self.jugador.pedir_carta(carta)

    def detenerse_jugador(self):
        pass

    def jugar(self):
        while True:
            opcion = input("¿Deseas pedir una carta adicional o plantarte? (Pedir/Plantarse): ")
            if opcion.lower() == "pedir":
                carta_nueva = obtener_carta()
                self.pedir_carta_jugador(carta_nueva)
                puntaje_jugador = self.jugador.calcular_puntaje()
                if puntaje_jugador > 21:
                    print("¡Te has pasado de 21! Has perdido.")
                    break
            elif opcion.lower() == "plantarse":
                self.detenerse_jugador()
                puntaje_jugador = self.jugador.calcular_puntaje()
                puntaje_crupier = self.crupier.calcular_puntaje()
                # Implementa la lógica para determinar el ganador
                break
            else:
                print("Opción inválida. Por favor, elige 'Pedir' o 'Plantarse'.")

    def obtener_carta(self):
        # Implementa la lógica para obtener una carta aleatoria de una baraja
        pass
