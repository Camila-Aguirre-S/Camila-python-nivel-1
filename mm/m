import random
from reglas import Jugador
class Baraja:
    def __init__(self):
        self.lista_cartas = [
            u'2♠', u'3♠', u'4♠', u'5♠', u'6♠', u'7♠', u'8♠', u'9♠', u'10♠', u'J♠', u'Q♠', u'K♠', u'A♠',
            u'2♥', u'3♥', u'4♥', u'5♥', u'6♥', u'7♥', u'8♥', u'9♥', u'10♥', u'J♥', u'Q♥', u'K♥', u'A♥',
            u'2♦', u'3♦', u'4♦', u'5♦', u'6♦', u'7♦', u'8♦', u'9♦', u'10♦', u'J♦', u'Q♦', u'K♦', u'A♦',
            u'2♣', u'3♣', u'4♣', u'5♣', u'6♣', u'7♣', u'8♣', u'9♣', u'10♣', u'J♣', u'Q♣', u'K♣', u'A♣'
        ]
        self.cartas_jugador = []
        self.cartas_casa = []

    def barajar(self):
        random.shuffle(self.lista_cartas)
        self.cartas_jugador = random.sample(self.lista_cartas, 2)

    def repartir_carta_casa(self):
        self.cartas_casa = random.sample(self.lista_cartas, 1)

    def obtener_cartas_jugador(self):
        return self.cartas_jugador

    def obtener_cartas_casa(self):
        return self.cartas_casa


class Jugador:
    def __init__(self):
        self.mano = []
    
    def pedir_carta(self, carta):
        self.mano.append(carta)
    
    def calcular_puntaje(self):
        puntaje = 0
        for carta in self.mano:
            if carta == 'A':
                puntaje += 11
            elif carta in ['K', 'Q', 'J']:
                puntaje += 10
            else:
                puntaje += int(carta)
        return puntaje


class Juego:
    def __init__(self):
        self.baraja = Baraja()
        self.usuarios = []

    def iniciar_juego(self):
        while True:
            print("Opciones:")
            print("1. Nuevo usuario")
            print("2. Nuevo juego")
            print("3. Estadísticas")
            print("4. Salir")
            seleccion = input("Seleccione una opción (1, 2, 3, 4): ")

            if seleccion == '1':
                self.nuevo_usuario()
            elif seleccion == '2':
                self.nuevo_juego()

            elif seleccion == '3':
                self.estadisticas()
            elif seleccion == '4':
                break
            else:
                print("Opción inválida. Por favor, seleccione una opción válida.")
                continue

    def nuevo_usuario(self):
        nombre = input("Ingrese el nombre del nuevo usuario: ")
        self.usuarios.append(nombre)
        print("Usuario", nombre, "agregado correctamente.")

    def nuevo_juego(self):
        self.baraja.barajar()
        self.baraja.repartir_carta_casa()

        cartas_jugador = self.baraja.obtener_cartas_jugador()
        cartas_casa = self.baraja.obtener_cartas_casa()

        print("Cartas del jugador:", cartas_jugador)
        print("Cartas de la casa:", cartas_casa)
class Jugador:
    def __init__(self):
        self.mano = []
    
    def pedir_carta(self, carta):
        self.mano.append(carta)
    
    def calcular_puntaje(self):
        puntaje = 0
        for carta in self.mano:
            if carta == 'A':
                puntaje += 11
            elif carta in ['K', 'Q', 'J']:
                puntaje += 10
            else:
                puntaje += int(carta)
        return puntaje


class BlackjackGame:
    def __init__(self):
        self.jugador = Jugador()
        self.crupier = Jugador()

    def pedir_carta_jugador(self, carta):
        self.jugador.pedir_carta(carta)

    def detenerse_jugador(self):
        pass

    def jugar(self):
        while True:
            opcion = input("¿Deseas pedir una carta adicional o plantarte? (Pedir/Plantarse): ")
            if opcion.lower() == "pedir":
                carta_nueva = obtener_carta()
                self.pedir_carta_jugador(carta_nueva)
                puntaje_jugador = self.jugador.calcular_puntaje()
                if puntaje_jugador > 21:
                    print("¡Te has pasado de 21! Has perdido.")
                    break
            elif opcion.lower() == "plantarse":
                self.detenerse_jugador()
                puntaje_jugador = self.jugador.calcular_puntaje()
                puntaje_crupier = self.crupier.calcular_puntaje()
                # Implementa la lógica para determinar el ganador
                break
            else:
                print("Opción inválida. Por favor, elige 'Pedir' o 'Plantarse'.")

    def obtener_carta(self):
        # Implementa la lógica para obtener una carta aleatoria de una baraja
        pass

    def estadisticas(self):
        # Lógica para mostrar las estadísticas del juego
        pass


juego = Juego()
juego.iniciar_juego()
